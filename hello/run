#!/bin/bash

# set process id to kill on error
if [ -z "${err_pid+x}" ]
then
    export err_pid=$$
fi

# print error and die
err() {
    if [ $# -gt 0 ]
    then
	>&2 echo "$@"
    fi
    kill -SIGTERM $err_pid
}
export -f err

# directory (absolute path) of this run script
here="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"

# tag derived from directory ("In/This Folder" becomes "this_folder")
tag=$(basename "$here" | tr '[:upper:]' '[:lower:]')
tag="${tag// /_}"

# bash cleanup
cleanup() {
    docker stop $id
}

# build container or exit with failure
docker build -t $tag . || err "build $tag in '$here' failed."

if [ $# -eq 0 ]
then
    # run container in background
    id=$(docker run --detach --user user -it --rm -v "$(pwd):/app" $tag)
    [ $? -eq  0 ] || err "run $tag in '$here' failed."

    # make sure we clean up running container
    trap cleanup SIGINT SIGTERM EXIT

    # show output of container (output of continuous testing)
    docker logs -f $id &

    # log into container
    docker exec -it $id bash -i
else
    docker run --user user -it --rm -v "$(pwd):/app" $tag "$@"
fi
